// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matmult.proto

package matmult

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Matrix struct {
	Columns              []*Matrix_Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Matrix) Reset()         { *m = Matrix{} }
func (m *Matrix) String() string { return proto.CompactTextString(m) }
func (*Matrix) ProtoMessage()    {}
func (*Matrix) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6b75c85cde77053, []int{0}
}

func (m *Matrix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matrix.Unmarshal(m, b)
}
func (m *Matrix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matrix.Marshal(b, m, deterministic)
}
func (m *Matrix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matrix.Merge(m, src)
}
func (m *Matrix) XXX_Size() int {
	return xxx_messageInfo_Matrix.Size(m)
}
func (m *Matrix) XXX_DiscardUnknown() {
	xxx_messageInfo_Matrix.DiscardUnknown(m)
}

var xxx_messageInfo_Matrix proto.InternalMessageInfo

func (m *Matrix) GetColumns() []*Matrix_Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

type Matrix_Column struct {
	Element              []float64 `protobuf:"fixed64,1,rep,packed,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Matrix_Column) Reset()         { *m = Matrix_Column{} }
func (m *Matrix_Column) String() string { return proto.CompactTextString(m) }
func (*Matrix_Column) ProtoMessage()    {}
func (*Matrix_Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6b75c85cde77053, []int{0, 0}
}

func (m *Matrix_Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Matrix_Column.Unmarshal(m, b)
}
func (m *Matrix_Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Matrix_Column.Marshal(b, m, deterministic)
}
func (m *Matrix_Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Matrix_Column.Merge(m, src)
}
func (m *Matrix_Column) XXX_Size() int {
	return xxx_messageInfo_Matrix_Column.Size(m)
}
func (m *Matrix_Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Matrix_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Matrix_Column proto.InternalMessageInfo

func (m *Matrix_Column) GetElement() []float64 {
	if m != nil {
		return m.Element
	}
	return nil
}

type PerformerRequest struct {
	Multiplier           *Matrix  `protobuf:"bytes,1,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	Multiplicand         *Matrix  `protobuf:"bytes,2,opt,name=multiplicand,proto3" json:"multiplicand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformerRequest) Reset()         { *m = PerformerRequest{} }
func (m *PerformerRequest) String() string { return proto.CompactTextString(m) }
func (*PerformerRequest) ProtoMessage()    {}
func (*PerformerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6b75c85cde77053, []int{1}
}

func (m *PerformerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformerRequest.Unmarshal(m, b)
}
func (m *PerformerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformerRequest.Marshal(b, m, deterministic)
}
func (m *PerformerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformerRequest.Merge(m, src)
}
func (m *PerformerRequest) XXX_Size() int {
	return xxx_messageInfo_PerformerRequest.Size(m)
}
func (m *PerformerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PerformerRequest proto.InternalMessageInfo

func (m *PerformerRequest) GetMultiplier() *Matrix {
	if m != nil {
		return m.Multiplier
	}
	return nil
}

func (m *PerformerRequest) GetMultiplicand() *Matrix {
	if m != nil {
		return m.Multiplicand
	}
	return nil
}

type PerformerResponse struct {
	Result               *Matrix  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerformerResponse) Reset()         { *m = PerformerResponse{} }
func (m *PerformerResponse) String() string { return proto.CompactTextString(m) }
func (*PerformerResponse) ProtoMessage()    {}
func (*PerformerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6b75c85cde77053, []int{2}
}

func (m *PerformerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformerResponse.Unmarshal(m, b)
}
func (m *PerformerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformerResponse.Marshal(b, m, deterministic)
}
func (m *PerformerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformerResponse.Merge(m, src)
}
func (m *PerformerResponse) XXX_Size() int {
	return xxx_messageInfo_PerformerResponse.Size(m)
}
func (m *PerformerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PerformerResponse proto.InternalMessageInfo

func (m *PerformerResponse) GetResult() *Matrix {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Matrix)(nil), "matmult.Matrix")
	proto.RegisterType((*Matrix_Column)(nil), "matmult.Matrix.Column")
	proto.RegisterType((*PerformerRequest)(nil), "matmult.PerformerRequest")
	proto.RegisterType((*PerformerResponse)(nil), "matmult.PerformerResponse")
}

func init() { proto.RegisterFile("matmult.proto", fileDescriptor_a6b75c85cde77053) }

var fileDescriptor_a6b75c85cde77053 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0xdd, 0x0a, 0x09, 0x4e, 0x15, 0xe3, 0x1c, 0x24, 0x06, 0x0f, 0x25, 0x07, 0xed, 0x29,
	0x4a, 0x7a, 0xf5, 0xa4, 0x47, 0x29, 0xc8, 0x9e, 0xbc, 0xa6, 0x71, 0x84, 0xc0, 0x7e, 0xc4, 0xfd,
	0x80, 0xfa, 0xef, 0xc5, 0xdd, 0x6e, 0xa9, 0x25, 0x1e, 0x67, 0xde, 0xe7, 0x99, 0x37, 0x61, 0xe1,
	0x42, 0x76, 0x4e, 0x7a, 0xe1, 0x9a, 0xd1, 0x68, 0xa7, 0x31, 0xdf, 0x8d, 0xf5, 0x06, 0xb2, 0x75,
	0xe7, 0xcc, 0xb0, 0xc5, 0x47, 0xc8, 0x7b, 0x2d, 0xbc, 0x54, 0xb6, 0x64, 0x8b, 0xd3, 0xe5, 0xbc,
	0xbd, 0x6e, 0x92, 0x13, 0x89, 0xe6, 0x25, 0xc4, 0x3c, 0x61, 0xd5, 0x1d, 0x64, 0x71, 0x85, 0xb7,
	0x90, 0x93, 0x20, 0x49, 0xca, 0x05, 0x97, 0x3d, 0xcf, 0x0a, 0xc6, 0xd3, 0xaa, 0xde, 0x42, 0xf1,
	0x46, 0xe6, 0x53, 0x1b, 0x49, 0x86, 0xd3, 0x97, 0x27, 0xeb, 0xf0, 0x01, 0xe0, 0xf7, 0xf4, 0x30,
	0x8a, 0x81, 0x4c, 0xc9, 0x16, 0x6c, 0x39, 0x6f, 0x2f, 0x8f, 0x0a, 0xf9, 0x01, 0x82, 0x2b, 0x38,
	0x4f, 0x53, 0xdf, 0xa9, 0x8f, 0x72, 0x36, 0xad, 0xfc, 0x81, 0xea, 0x27, 0xb8, 0x3a, 0x68, 0xb6,
	0xa3, 0x56, 0x96, 0xf0, 0x1e, 0x32, 0x43, 0xd6, 0x0b, 0xf7, 0x5f, 0xed, 0x2e, 0x6e, 0xdf, 0xe1,
	0x6c, 0x6f, 0xe3, 0x2b, 0x14, 0xeb, 0x78, 0xfa, 0x3b, 0x60, 0x3d, 0x59, 0xbc, 0xd9, 0x9b, 0xc7,
	0xff, 0x57, 0x55, 0x53, 0x51, 0xfc, 0x80, 0xfa, 0x64, 0x93, 0x85, 0x57, 0x58, 0xfd, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x26, 0xcd, 0x78, 0x6a, 0x96, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PerformerClient is the client API for Performer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PerformerClient interface {
	MultiplyMatrices(ctx context.Context, in *PerformerRequest, opts ...grpc.CallOption) (*PerformerResponse, error)
}

type performerClient struct {
	cc *grpc.ClientConn
}

func NewPerformerClient(cc *grpc.ClientConn) PerformerClient {
	return &performerClient{cc}
}

func (c *performerClient) MultiplyMatrices(ctx context.Context, in *PerformerRequest, opts ...grpc.CallOption) (*PerformerResponse, error) {
	out := new(PerformerResponse)
	err := c.cc.Invoke(ctx, "/matmult.Performer/MultiplyMatrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PerformerServer is the server API for Performer service.
type PerformerServer interface {
	MultiplyMatrices(context.Context, *PerformerRequest) (*PerformerResponse, error)
}

// UnimplementedPerformerServer can be embedded to have forward compatible implementations.
type UnimplementedPerformerServer struct {
}

func (*UnimplementedPerformerServer) MultiplyMatrices(ctx context.Context, req *PerformerRequest) (*PerformerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiplyMatrices not implemented")
}

func RegisterPerformerServer(s *grpc.Server, srv PerformerServer) {
	s.RegisterService(&_Performer_serviceDesc, srv)
}

func _Performer_MultiplyMatrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerformerServer).MultiplyMatrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matmult.Performer/MultiplyMatrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerformerServer).MultiplyMatrices(ctx, req.(*PerformerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Performer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matmult.Performer",
	HandlerType: (*PerformerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MultiplyMatrices",
			Handler:    _Performer_MultiplyMatrices_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "matmult.proto",
}
